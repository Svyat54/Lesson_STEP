package com.company.Stepik;

import com.company.Samos1.Array;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Stepik8 {
    public static void main(String[] args) {
        //Task1 - Напишите программу, которая считает натуральное число n c клавиатуры и создаст список, в котором первый и последний элементы будут равны строчке 1,
        // а между ними будет n 0. Выведите список на экран через пробел.
        Scanner sc = new Scanner(System.in);
//        int n = 3;
//        ArrayList<Integer> list = new ArrayList();
//        list.add(1);
//        for (int i = 0; i < n; i++){
//            list.add(0);
//        }
//        list.add(1);
//        for (Integer s : list){
//            System.out.print(s.toString() + " ");
//        }

        //Task2 - Напишите программу, которая считает натуральное число n c клавиатуры и создаст список, в котором будут хранится строковые представления чисел от 0 до n-1.
        // Затем программа считывает число m (m <= n) и строку s. Вставьте строку s на позицию m. Выведите список на экран через пробел.
//        int n = 5;
//        int m = 2;
//        String s = "Строка";
//        ArrayList<String> list = new ArrayList<>(n);
//        for (int i = 0; i < n; i++) {
//            list.add(String.valueOf(i));
//        }
//        list.add(m,s);
//        for (String str : list){
//            System.out.print(str + " ");
//        }

        //Task3 - Напишите программу, которая считает натуральное число n c клавиатуры и создаст список, в котором будут хранится строковые представления чисел от 0 до n-1.
        // Затем программа считывает число m (m < n) и строку s. Замените строкой s элемент на позиции m. Выведите список на экран через пробел.
//        int n = 5;
//        int m = 2;
//        String s = "Строка";
//        ArrayList<String> list = new ArrayList<>(n);
//        for (int i = 0; i < n; i++) {
//            list.add(String.valueOf(i));
//        }
//        list.set(m,s);
//        for (String str : list){
//            System.out.print(str + " ");
//        }

        //Task4 - Напишите программу, которая считает натуральное число n c клавиатуры и создаст список, в котором будут хранится строковые представления чисел от 0 до n-1.
        // Затем программа считывает число m (m < n). Удалите  элемент на позиции m. Выведите список на экран через пробел.
//        int n = 5;
//        int m = 2;
//        ArrayList<String> list = new ArrayList<>(n);
//        for (int i = 0; i < n; i++) {
//            list.add(String.valueOf(i));
//        }
//        list.remove(m);
//        for (String str : list){
//            System.out.print(str + " ");
//        }

        //Task5 - Сначала вводится число n - количество запросов к вашей программе. Каждый из запросов будет иметь один следующих видов:
        //push <Название трека> - добавляет трек в плейлист
        //pop - удаляет из плейлиста первый трек. При этом на экран выводится запись вида "воспроизводится <название трека>"
        //После выполнения всех запросов выведите оставшиеся в очереди треки. Гарантируется, что название трека состоит из одного слова.
//        int n = 4;
//        ArrayList<String> list = new ArrayList<>(n);
//        for(int i = 0; i < n; i++){
//            String s = sc.next();
//            if (s.equals("push")){
//                list.add(sc.next());
//            }
//            if (s.equals("pop")){
//                System.out.println("Воспроизводится "+ list.remove(0));
//            }
//        }
//        for (String str : list){
//            System.out.print(str + " ");
//        }

        //Task6 - Напишите программу, которая будет формировать очередь оформления заявок в МФЦ. Сначала водится число n -  количество запросов в вашей программе.
        // Каждый из запросов будет иметь один следующих видов:
        //"Добавить <ИМЯ>" - Добавить человека с именем ИМЯ в конец очереди
        //"Следующий!" - вызвали человека, следующего первым по очереди. При этом человек с именем ИМЯ уходит из очереди.
        //"<ИМЯ1> занимала за <ИМЯ2>" - человек с именем ИМЯ1 становится в очередь за человеком по имени ИМЯ2. гарантируется, что человек, за которым занимали очередь стоит в ней.
        //Гарантируется, что все люди имеют различные имена и при вызове следующего человека, очередь не пуста.
        //Выведите на экран через пробел очередь после совершения всех запросов.
        //Добавить Лена
        //Добавить Коля
        //Марина занимала за Лена
        //Следующий!
        //Добавить Игорь
        //Марина Коля Игорь
//        int n = 5;
//        ArrayList<String> list = new ArrayList<>();
//        for(int i = 0; i < n; i++){
//            String s = sc.next();
//            if (s.equals("Добавить")){
//                list.add(sc.next());
//                continue;
//            }
//            if (s.equals("Следующий!")){
//                list.remove(0);
//                continue;
//            }
//            sc.next();
//            sc.next();
//            list.add(list.indexOf(sc.next())+1,s);
//        }
//        for (String str : list) {
//            System.out.print(str + " ");
//        }

        //Task7 - Сначала водится число n - количество запросов в вашей программе. Каждый из запросов будет иметь один следующих видов:
        //
        //push <одежда> - Петя вешает на стул элемент одежды
        //pop - снимает одежду со стула. При этом на экран выводится запись вида "Петя взял <одежда>"
//        int n = 5;
//        ArrayList<String> list = new ArrayList<>();
//        for (int i = 0; i < n; i++){
//            String s = sc.next();
//            if (s.equals("push")){
//                list.add(sc.next());
//            }
//            if (s.equals("pop")){
//                    System.out.println("Петя взял " + list.remove(list.size() -1));
//                }
//            }
//        for(String str : list){
//            System.out.print(str + " ");
//        }

        //Task8 - "Добавить <ИМЯ>" - Добавить человека с именем ИМЯ в конец очереди. Вывести на экран фразу "<ИМЯ> в очереди"
        //"Следующий!" - вызвали человека, следующего первым по очереди. При этом человек с именем ИМЯ уходит из очереди и на экране появляется строка вида "<ИМЯ> в обработке".
        //"<ИМЯ1> занимала/занимал за <ИМЯ2>" - человек с именем ИМЯ1 становится в очередь за человеком по имени ИМЯ2. Если этот человек сейчас находится в обработке, то ИМЯ1 становится в начало очереди. Если такого человека в очереди нет, то ИМЯ1 становится в конец списка, при этом в консоль выводится фраза "<ИМЯ1, не надо тут ля-ля>".
        //"Посмотреть очередь" - на экран в консоль выводится вся очередь через пробел.
        //"Стоит ли оно того? <ИМЯ>" - человек с именем ИМЯ смотрит на очередь, если в ней сейчас меньше 5 человек, то он становится в конец очереди, если нет - то уходит, а в консоли появляется надпись "Слабак!"
        //15
        //Добавить Игорь
        //Добавить Антон
        //Добавить Катя
        //Лиза занимала за Игорь
        //Посмотреть очередь
        //Стоит ли оно того? Вася
        //Следующий!
        //Следующий!
        //Валя занимала за Игорь
        //Следующий!
        //Следующий!
        //Посмотреть очередь
        //Следующий!
        //Следующий!
        //Следующий!
//        int n = 15;
//        String name = "";
//        String processing = " ";
//        String wait = " ";
//        ArrayList<String> list = new ArrayList<>();
//        for(int i = 0; i < n; i++) {
//            String s = sc.next();
//            if (s.equals("Добавить")) {
//                name = sc.next();
//                list.add(name);
//                System.out.println(name + " в очереди");
//            } else if (s.equals("Следующий!")) {
//                if (list.size() == 0) {
//                    System.out.println("Отлично, попью чаёк!");
//                } else {
//                    processing = list.get(0);
//                    System.out.println(list.remove(0) + " в обработке");
//                }
//            } else if (s.equals("Посмотреть")) {
//                sc.next();
//                if (list.size() == 0) {
//                    System.out.println("*прокатилось перекати-поле*");
//                } else {
//                    System.out.print(String.join(" ", list));
//                    System.out.println();
//                }
//            } else if (s.equals("Стоит")) {
//                sc.next();sc.next();sc.next();
//                if (list.size() < 5) {
//                    list.add(sc.next());
//                } else {
//                    sc.next();
//                    System.out.println("Слабак!");
//                }
//            }
//            else {
//                sc.next();
//                sc.next();
//                wait = sc.next();
//                if (list.size() == 0) {
//                    list.add(s);
//                } else if (wait.equals(processing)) {
//                    list.add(0, s);
//                    processing = "";
//                } else if (!list.contains(wait)) {
//                    list.add(s);
//                    System.out.println(s + ", не надо тут ля-ля");
//                } else
//                    list.add((list.indexOf(wait) + 1), s);
//            }
//        }
    }
}




